plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-android-extensions'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "uk.co.diegonovati.tasksdemo"
        minSdkVersion 16
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"
        multiDexEnabled true

        // Staging backend
        buildConfigField 'String', 'backendUrl', '"https://adam-deleteme.s3.amazonaws.com"'

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

            // Production backend
            buildConfigField 'String', 'backendUrl', '"https://adam-deleteme.s3.amazonaws.com"'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
//    javaCompileOptions {
//        annotationProcessorOptions {
//            arguments += ["room.schemaLocation":
//                                  "$projectDir/schemas".toString()]
//        }
//    }
}

kapt {
    correctErrorTypes true
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.3.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'com.android.support:multidex:1.0.3'
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:1.1.0"

    // dagger
    implementation 'com.google.dagger:hilt-android:2.34.1-beta'
    kapt 'com.google.dagger:hilt-compiler:2.34.1-beta'

    // coroutines
    def coroutines_version = '1.4.3-native-mt'
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-debug:$coroutines_version"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_version"

    // kittinunf result class
    def kittinunf_version = '4.0.0'
    implementation "com.github.kittinunf.result:result:$kittinunf_version"
    implementation "com.github.kittinunf.result:result-coroutines:$kittinunf_version"

    // gson
    implementation 'com.google.code.gson:gson:2.8.6'

    // okhttp3
    def okhttp3_version = '4.9.0'
    implementation "com.squareup.okhttp3:okhttp:$okhttp3_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp3_version"

    // retrofit
    def retrofit_version = '2.9.0'
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    // room
    def room_version = '2.2.6'
    implementation "androidx.room:room-runtime:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    kapt "androidx.room:room-compiler:$room_version"

    // Mockito
    def mockito_version = '3.9.0'
    testImplementation "org.mockito:mockito-core:$mockito_version"
    androidTestImplementation "org.mockito:mockito-android:$mockito_version"
    androidTestImplementation "org.mockito:mockito-core:$mockito_version"

    testImplementation 'com.nhaarman:mockito-kotlin-kt1.1:1.6.0'
    androidTestImplementation 'com.nhaarman:mockito-kotlin-kt1.1:1.6.0'
}